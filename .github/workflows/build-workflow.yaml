# This file is part of Astarte.
#
# Copyright 2022 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Build flow
permissions:
  contents: read
on:
  push:
    branches:
      - master
      - release-*
  # Run on branch/tag creation
  create:
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
jobs:
  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          # No toolchain matrix for fmt checking
          toolchain: 1.66.1
          override: true
      - name: Add rustfmt
        run: rustup component add rustfmt
      - name: Check formatting
        run: |
          cargo fmt --all -- --check

  check:
    name: Check compilation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - 1.66.1
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Update Cargo.lock for stable version
        if: matrix.toolchain == 'stable'
        run: cargo update
      - name: Run cargo check
        run: |
          cargo check --all-targets --all-features

  clippy_check:
    name: Check linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - 1.66.1
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Add clippy
        run: rustup component add clippy
      - name: Update Cargo.lock for stable version
        if: matrix.toolchain == 'stable'
        run: cargo update
      - name: Run cargo clippy
        run: |
          cargo clippy --all-targets --all-features -- -Dwarnings
      - name: Run clippy in derive macros folder
        run: |
          cd ./astarte-device-sdk-derive
          cargo clippy --all-targets --all-features -- -Dwarnings
