# This file is part of Astarte.
#
# Copyright 2022 - 2025 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: check
on:
  workflow_call:
  workflow_dispatch:
permissions:
  contents: read
defaults:
  run:
    shell: bash
env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"
jobs:
  fmt:
    runs-on: ubuntu-24.04
    name: stable / fmt
    steps:
      - uses: actions/checkout@v4
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --check --all
  clippy:
    runs-on: ubuntu-24.04
    name: ${{ matrix.toolchain }} / clippy
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt-get -y install libsqlite3-dev libssl-dev
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: cargo clippy
        run: cargo clippy --locked --all-targets --all-features --workspace -- -D warnings
  doc:
    runs-on: ubuntu-24.04
    name: nightly / doc
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt-get -y install libsqlite3-dev libssl-dev
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: Install cargo-docs-rs
        uses: dtolnay/install@cargo-docs-rs
      - run: cargo docs-rs --locked

  hack:
    runs-on: ubuntu-24.04
    name: ubuntu / stable / features
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt-get -y install libsqlite3-dev libssl-dev
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo hack test
        # Doesn't test all combination of features, but the space is becoming too large and it takes
        # too long
        run: cargo hack --each-feature test --locked
  minimal-versions:
    runs-on: ubuntu-24.04
    name: ubuntu / stable / minimal-versions
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt-get -y install libsqlite3-dev libssl-dev
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install nightly for -Zminimal-versions
        uses: dtolnay/rust-toolchain@nightly
      - name: Install cargo hack
        uses: taiki-e/install-action@cargo-hack
      - name: Install cargo minimal-versions
        uses: taiki-e/install-action@cargo-minimal-versions
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: rustup default stable
        run: rustup default stable
      - name: Check minimal versions
        run: cargo minimal-versions check --workspace --ignore-private --detach-path-deps=skip-exact --direct
        env:
          RUSTFLAGS: -D warnings
  msrv:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        msrv: [1.78]
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt-get -y install libsqlite3-dev libssl-dev
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.msrv }}
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: Install cargo hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo +${{ matrix.msrv }} check
        run: cargo +${{ matrix.msrv }} hack --no-dev-deps check --all-features --exclude astarte-device-sdk-mock --exclude e2e-test
  # Run semver-check on release branch push or PR
  semver:
    if: startsWith(github.base_ref, 'release-') || startsWith(github.ref, 'release-')
    name: stable / semver
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          release-type: patch
  # Check that the create can be compiled with only the packaged files
  for-publish:
    name: stable / for-publish
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt-get -y install libsqlite3-dev libssl-dev
      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - run: ./scripts/check-for-publish.sh
