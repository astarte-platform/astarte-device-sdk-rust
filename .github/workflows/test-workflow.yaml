# This file is part of Astarte.
#
# Copyright 2023 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0


name: Unit flow

on:
  push:
  # Run on branch/tag creation
  create:
  # Run on pull requests
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  unit_test:
    name: Unit-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
        - 1.66.1
        - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Run cargo test for examples
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --examples

  code_coverage_tarpauline:
    name: Code coverage tarpauline based
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Run cargo-tarpaulin with xml output
        run: cargo tarpaulin --engine llvm --ignore-tests --lib --out Xml -- --test-threads 1
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
